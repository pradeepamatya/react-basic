[{"F:\\prj\\react\\react-api\\src\\index.js":"1","F:\\prj\\react\\react-api\\src\\reportWebVitals.js":"2","F:\\prj\\react\\react-api\\src\\pages\\Users.js":"3","F:\\prj\\react\\react-api\\src\\App.js":"4","F:\\prj\\react\\react-api\\src\\pages\\Info.js":"5","F:\\prj\\react\\react-api\\src\\pages\\Posts.js":"6","F:\\prj\\react\\react-api\\src\\components\\Navbar.js":"7"},{"size":565,"mtime":1612001174110,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1612001174115,"results":"10","hashOfConfig":"9"},{"size":1896,"mtime":1612089796676,"results":"11","hashOfConfig":"9"},{"size":567,"mtime":1612004841341,"results":"12","hashOfConfig":"9"},{"size":1891,"mtime":1612090505114,"results":"13","hashOfConfig":"9"},{"size":1686,"mtime":1612001174113,"results":"14","hashOfConfig":"9"},{"size":1130,"mtime":1612001174109,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"u3x0d1",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\prj\\react\\react-api\\src\\index.js",[],["33","34"],"F:\\prj\\react\\react-api\\src\\reportWebVitals.js",[],"F:\\prj\\react\\react-api\\src\\pages\\Users.js",["35","36"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Card, Spinner, CardText, CardBody,\r\n  CardTitle, CardSubtitle, Button, CardFooter,\r\n} from 'reactstrap';\r\n\r\nimport {BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n\r\n\r\nconst BASE_URL = \"https://jsonplaceholder.typicode.com\"\r\nclass Users extends React.Component{\r\n  \r\n  state = {\r\n    users: [],\r\n    isLoading:false\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      isLoading: true\r\n    })\r\n\r\n    axios.get(`${BASE_URL}/users`).then(res => {\r\n      this.setState({\r\n        users: res.data,\r\n        isLoading: false\r\n      })\r\n    }).catch(error => {\r\n      this.setState({\r\n        ...this.state,\r\n        isLoading: false\r\n      })\r\n    })\r\n\r\n    // fetch(`${BASE_URL}/posts`).then(res => res.json()).then(json => {\r\n    //   this.setState({\r\n    //     posts: json,\r\n    //     isLoading:false\r\n    //   })\r\n    // }).catch(error => {\r\n    //   this.setState({\r\n    //     ...this.state,\r\n    //     isLoading:false\r\n    //   })\r\n    //   console.log(error)\r\n    // })\r\n    \r\n  }\r\n\r\n  render() {\r\n\r\n    if(this.state.isLoading) return <Spinner type=\"grow\" color=\"primary\" />\r\n    return <div className=\"container\">\r\n      {\r\n        this.state.users.map(user => {\r\n          return (\r\n            <Card key={user.id} className=\"mt-3\">\r\n              <CardBody>\r\n                <CardTitle tag=\"h5\"> { user.name } </CardTitle>\r\n                <CardText> { user.address.city } </CardText>\r\n              </CardBody>\r\n              <CardFooter>\r\n              <Link to = {\"/users/info\"}>              \r\n              <Button color=\"primary\">View</Button>{' '}\r\n              </Link>\r\n                <CardSubtitle> Button view </CardSubtitle>\r\n              </CardFooter>\r\n            </Card>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Users;","F:\\prj\\react\\react-api\\src\\App.js",[],"F:\\prj\\react\\react-api\\src\\pages\\Info.js",["37","38","39","40","41"],"F:\\prj\\react\\react-api\\src\\pages\\Posts.js",["42"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Card, Spinner, CardText, CardBody,\r\n  CardTitle, CardSubtitle, Button, CardFooter\r\n} from 'reactstrap';\r\n\r\nconst BASE_URL = \"https://jsonplaceholder.typicode.com\"\r\nclass Posts extends React.Component{\r\n\r\n  state = {\r\n    posts: [],\r\n    isLoading:false\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      isLoading: true\r\n    })\r\n\r\n    axios.get(`${BASE_URL}/posts`).then(res => {\r\n      this.setState({\r\n        posts: res.data,\r\n        isLoading: false\r\n      })\r\n    }).catch(error => {\r\n      this.setState({\r\n        ...this.state,\r\n        isLoading: false\r\n      })\r\n    })\r\n\r\n    // fetch(`${BASE_URL}/posts`).then(res => res.json()).then(json => {\r\n    //   this.setState({\r\n    //     posts: json,\r\n    //     isLoading:false\r\n    //   })\r\n    // }).catch(error => {\r\n    //   this.setState({\r\n    //     ...this.state,\r\n    //     isLoading:false\r\n    //   })\r\n    //   console.log(error)\r\n    // })\r\n    \r\n  }\r\n\r\n  render() {\r\n\r\n    if(this.state.isLoading) return <Spinner type=\"grow\" color=\"primary\" />\r\n    return <div className=\"container\">\r\n      {\r\n        this.state.posts.map(post => {\r\n          return (\r\n            <Card key={post.id} className=\"mt-3\">\r\n              <CardBody>\r\n                <CardTitle tag=\"h5\"> { post.title } </CardTitle>\r\n                <CardText> { post.body } </CardText>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <CardSubtitle> Created By : {post.userId} </CardSubtitle>\r\n              </CardFooter>\r\n            </Card>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default Posts;","F:\\prj\\react\\react-api\\src\\components\\Navbar.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":8,"column":26,"nodeType":"49","messageId":"50","endLine":8,"endColumn":32},{"ruleId":"47","severity":1,"message":"51","line":8,"column":34,"nodeType":"49","messageId":"50","endLine":8,"endColumn":39},{"ruleId":"47","severity":1,"message":"52","line":5,"column":14,"nodeType":"49","messageId":"50","endLine":5,"endColumn":26},{"ruleId":"47","severity":1,"message":"53","line":7,"column":10,"nodeType":"49","messageId":"50","endLine":7,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":8,"column":26,"nodeType":"49","messageId":"50","endLine":8,"endColumn":32},{"ruleId":"47","severity":1,"message":"51","line":8,"column":34,"nodeType":"49","messageId":"50","endLine":8,"endColumn":39},{"ruleId":"54","severity":1,"message":"55","line":62,"column":33,"nodeType":"56","messageId":"57","endLine":62,"endColumn":35},{"ruleId":"47","severity":1,"message":"58","line":5,"column":28,"nodeType":"49","messageId":"50","endLine":5,"endColumn":34},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'CardSubtitle' is defined but never used.","'render' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]